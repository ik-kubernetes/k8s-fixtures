---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-to-scaleout
  namespace: default
  labels:
    app: nginx
spec:
  replicas: 0
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: eks.amazonaws.com/capacityType
                operator: In
                values:
                - SPOT
      # nodeSelector:
      #   eks.amazonaws.com/capacityType: SPOT
      containers:
      - image: nginx
        name: nginx-to-scaleout
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 500m
            memory: 512Mi
      tolerations:
      - effect: NoSchedule
        key: dedicated
        operator: Equal
        value: cluster-resources
      - effect: NoExecute
        key: dedicated
        operator: Equal
        value: cluster-resources

# kubectl get nodes --selector='eks-managed=true'
# kubectl apply -f ./fixtures/scale-down.yaml
# kubectl delete -f ./fixtures/scale-down.yaml
# or
# kubectl create deployment autoscaler-demo --image=nginx
# kubectl scale deployment autoscaler-demo --replicas=50
